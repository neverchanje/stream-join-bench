---
version: "3.7"
name: redpanda-quickstart
networks:
  redpanda_network:
    driver: bridge
volumes:
  postgres: null
services:
  postgres:
    image: debezium/postgres:13
    ports:
      - 5432:5432
    environment:
      POSTGRES_PASSWORD: postgres123
      POSTGRES_USER: postgresuser
      POSTGRES_DB: mydb
    volumes:
      - "postgres:/var/lib/postgresql/data"
      - ./postgres_bootstrap.sql:/docker-entrypoint-initdb.d/postgres_bootstrap.sql
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -h 127.0.0.1 -U postgresuser -d mydb"
        ]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - redpanda_network
    container_name: postgres

  debezium:
    image: debezium/connect:1.9
    environment:
      BOOTSTRAP_SERVERS: 0.0.0.0:9092
      GROUP_ID: 1
      CONFIG_STORAGE_TOPIC: connect_configs
      OFFSET_STORAGE_TOPIC: connect_offsets
      KEY_CONVERTER: io.confluent.connect.avro.AvroConverter
      VALUE_CONVERTER: io.confluent.connect.avro.AvroConverter
      CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL: http://0.0.0.0:8081
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: http://0.0.0.0:8081
    ports:
      - 8083:8083
    healthcheck:
      test: curl -f localhost:8083
      interval: 1s
      start_period: 120s
    depends_on:
      postgres: { condition: service_healthy }
    networks:
      - redpanda_network
    hostname: debezium
    container_name: debezium
