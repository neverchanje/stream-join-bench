---
version: "3.7"
name: redpanda-quickstart
networks:
  redpanda_network:
    driver: bridge
volumes:
  redpanda: null
  postgres: null
services:
  redpanda:
    image: docker.redpanda.com/redpandadata/redpanda:v23.1.13
    command:
      - redpanda start
      - --smp 1
      - --overprovisioned
      - --kafka-addr internal://0.0.0.0:9092,external://0.0.0.0:19092
      # Address the broker advertises to clients that connect to the Kafka API.
      # Use the internal addresses to connect to the Redpanda brokers
      # from inside the same Docker network.
      # Use the external addresses to connect to the Redpanda brokers
      # from outside the Docker network.
      - --advertise-kafka-addr internal://redpanda:9092,external://localhost:19092
      - --pandaproxy-addr internal://0.0.0.0:8082,external://0.0.0.0:18082
      # Address the broker advertises to clients that connect to the HTTP Proxy.
      - --advertise-pandaproxy-addr internal://redpanda:8082,external://localhost:18082
      - --schema-registry-addr internal://0.0.0.0:8081,external://0.0.0.0:18081
      # Redpanda brokers use the RPC API to communicate with each other internally.
      - --rpc-addr redpanda:33145
      - --advertise-rpc-addr redpanda:33145
    ports:
      - 18081:18081
      - 18082:18082
      - 19092:19092
      - 19644:9644
    volumes:
      - redpanda:/var/lib/redpanda/data
    networks:
      - redpanda_network
    healthcheck:
      test: ["CMD-SHELL", "rpk cluster health | grep -E 'Healthy:.+true' || exit 1"]
      interval: 15s
      timeout: 3s
      retries: 5
      start_period: 5s
    container_name: redpanda

  postgres:
    image: debezium/postgres:13
    ports:
      - 5432:5432
    environment:
      POSTGRES_PASSWORD: postgres123
      POSTGRES_USER: postgresuser
      POSTGRES_DB: mydb
    volumes:
      - "postgres:/var/lib/postgresql/data"
      - ./postgres_bootstrap.sql:/docker-entrypoint-initdb.d/postgres_bootstrap.sql
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -h 127.0.0.1 -U postgresuser -d mydb"
        ]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - redpanda_network
    container_name: postgres

  debezium:
    image: debezium/connect:1.9
    environment:
      BOOTSTRAP_SERVERS: redpanda:9092
      GROUP_ID: 1
      CONFIG_STORAGE_TOPIC: connect_configs
      OFFSET_STORAGE_TOPIC: connect_offsets
      KEY_CONVERTER: io.confluent.connect.avro.AvroConverter
      VALUE_CONVERTER: io.confluent.connect.avro.AvroConverter
      CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL: http://redpanda:18081
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: http://redpanda:18081
    ports:
      - 8083:8083
    healthcheck:
      test: curl -f localhost:8083
      interval: 1s
      start_period: 120s
    depends_on:
      redpanda: { condition: service_healthy }
      postgres: { condition: service_healthy }
    networks:
      - redpanda_network
    hostname: debezium
    container_name: debezium

  debezium_deploy:
    image: debezium/connect:1.9
    depends_on:
      debezium:
        condition: service_healthy
    volumes:
      - ./postgres_dbz.sh:/postgres_dbz.sh
    entrypoint: [ bash, -c, /postgres_dbz.sh ]
    networks:
      - redpanda_network
    container_name: debezium_deploy
    restart: on-failure

  console:
    image: docker.redpanda.com/redpandadata/console:v2.2.4
    entrypoint: /bin/sh
    command: -c "echo \"$$CONSOLE_CONFIG_FILE\" > /tmp/config.yml; /app/console"
    environment:
      CONFIG_FILEPATH: /tmp/config.yml
      CONSOLE_CONFIG_FILE: |
        kafka:
          brokers: ["redpanda:9092"]
          schemaRegistry:
            enabled: true
            urls: ["http://redpanda:8081"]
        redpanda:
          adminApi:
            enabled: true
            urls: ["http://redpanda:9644"]
        connect:
          enabled: true
          clusters:
            - name: debezium
              url: http://debezium:8083
    ports:
      - 8080:8080
    networks:
      - redpanda_network
    depends_on:
      - redpanda
    container_name: console

